name: Image-Classifer-Pipeline

on: [push]

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
  
  pylint:
    runs-on: ubuntu-latest
    needs: pre-commit
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Linting
      run: |
        pylint $(git ls-files '*.py')
      continue-on-error: false
  
  unit-tests:
    runs-on: ubuntu-latest
    needs: pylint
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Training Model
      run: |
        python model_creation.py
    - name: Running Unit Tests
      run: |  
        coverage run -m pytest -v -s unit_test.py
      continue-on-error: false
  
  happy-sad-path-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Training Model
      run: |
        python model_creation.py
    - name: Running Happy & Sad Path Tests
      run: |  
        coverage run -m pytest -v -s happy_sad_test.py
      continue-on-error: false
  
  acceptance-tests:
    runs-on: ubuntu-latest
    needs: happy-sad-path-tests
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Training Model
      run: |
        python model_creation.py
    - name: Running Acceptance Tests
      run: |  
        coverage run -m pytest -v -s acceptance_test.py

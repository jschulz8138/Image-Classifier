name: Image-Classifer-Pipeline

on: [push]



# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#              WE NEED TO FIGURE OUT ARTIFACTS AND NOT REINSTALLING DEPEDENCIES EVERY TIME
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
jobs:
  
  pylint_precommit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Training Model
      run: |
        python model_creation.py
    - name: Linting
      run: |
        pylint $(git ls-files '*.py')
      continue-on-error: false
      #also need to add precommit, we didn't do this for some reason?
  
  unit-tests:
    runs-on: ubuntu-latest
    needs: pylint_precommit
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Running Unit Tests
      run: |  
        coverage run -m pytest -v -s unit_test.py
      continue-on-error: false

      # will find the right place for it later
    - name: Upload .whl Artifact
      uses: actions/upload-artifact@v3
      with:
        name: image-classifier-wheel
        path: artifact/*.whl
  
  happy-sad-path-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Running Happy & Sad Path Tests
      run: |  
        coverage run -m pytest -v -s happy_sad_test.py
      continue-on-error: false
  
  acceptance-tests:
    runs-on: ubuntu-latest
    needs: happy-sad-path-tests
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Running Acceptance Tests
      run: |  
        coverage run -m pytest -v -s acceptance_test.py

  fetch-and-install-wheel:
    runs-on: ubuntu-latest
    needs: acceptance-tests 
    steps:
    - uses: actions/checkout@v4
    - name: Download .whl Artifact
      uses: actions/download-artifact@v3
      with:
        name: image-classifier-wheel
        path: ./artifact  # Directory where the .whl file will be downloaded
    - name: Install .whl file
      run: |
        pip install ./artifact/*.whl

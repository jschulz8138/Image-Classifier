name: Image-Classifer-Pipeline

on: [push]

jobs:
  pylint_precommit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf pre-commit
    - name: Install pre-commit hooks
      run: |
        pre-commit install
    - name: Ensure Artifact Directory
      run: mkdir -p ./artifact
    - name: Check for Existing Trained Model
      run: |
        if [ -f "./artifact/model.pkl" ]; then
          echo "Model already exists, skipping training."
        else
          echo "Model does not exist, training..."
          python model_creation.py
        fi
    - name: Debug File Existence
      run: |
        echo "Listing files in ./artifact:"
        ls -R ./artifact || echo "Directory is empty."
    - name: Upload Trained Model
      uses: actions/upload-artifact@v3
      with:
        name: trained-model
        path: ./artifact/model.pkl
    - name: Linting
      run: |
        pylint $(git ls-files '*.py')
      continue-on-error: false

  unit-tests:
    runs-on: ubuntu-latest
    needs: pylint_precommit
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Download Trained Model
      uses: actions/download-artifact@v3
      with:
        name: trained-model
        path: ./artifact
    - name: Running Unit Tests
      run: |  
        coverage run -m pytest -v -s unit_test.py

  happy-sad-path-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Download Trained Model
      uses: actions/download-artifact@v3
      with:
        name: trained-model
        path: ./artifact
    - name: Running Happy & Sad Path Tests
      run: |  
        coverage run -m pytest -v -s happy_sad_test.py

  acceptance-tests:
    runs-on: ubuntu-latest
    needs: happy-sad-path-tests
    strategy:
      matrix:
        python-version: ["3.12.1"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy opencv-python matplotlib tensorflow flask pylint pytest coverage flask-wtf
    - name: Download Trained Model
      uses: actions/download-artifact@v3
      with:
        name: trained-model
        path: ./artifact
    - name: Running Acceptance Tests
      run: |  
        coverage run -m pytest -v -s acceptance_test.py
